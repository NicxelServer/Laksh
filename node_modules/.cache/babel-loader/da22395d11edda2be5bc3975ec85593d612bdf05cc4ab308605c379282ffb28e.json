{"ast":null,"code":"import { getItem, setItem } from \"../../utility/localStorage\";\nimport * as types from \"./auth.actionTypes\";\nconst initialState = {\n  isLoading: false,\n  isError: false,\n  userData: getItem(\"userData\") || {},\n  isAuth: false,\n  userlist: [],\n  adminlist: []\n};\nexport const Authreducer = (state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case types.ADD_USER_LOADING:\n      {\n        return {\n          ...state,\n          isLoading: true,\n          isError: false\n        };\n      }\n    case types.ADD_USER_SUCCESS:\n      {\n        setItem(\"userData\", payload);\n        return {\n          ...state,\n          isLoading: false,\n          isError: false,\n          isAuth: true\n        };\n      }\n    case types.ADD_USER_ERROR:\n      {\n        return {\n          ...state,\n          isLoading: false,\n          isError: true\n        };\n      }\n    case types.LOGIN_USER_LOADING:\n      {\n        return {\n          ...state,\n          isLoading: true,\n          isError: false\n        };\n      }\n    case types.LOGIN_USER_SUCCESS:\n      {\n        setItem(\"userData\", payload);\n        return {\n          ...state,\n          isLoading: false,\n          isError: false,\n          isAuth: true\n        };\n      }\n    case types.LOGIN_USER_ERROR:\n      {\n        return {\n          ...state,\n          isLoading: false,\n          isError: true\n        };\n      }\n    case types.LOGOut_USER_LOADING:\n      {\n        return {\n          ...state,\n          isLoading: true,\n          isError: false\n        };\n      }\n    case types.LOGOut_USER_SUCCESS:\n      {\n        return {\n          ...state,\n          isLoading: false,\n          isError: false\n        };\n      }\n    case types.LOGOut_USER_ERROR:\n      {\n        return {\n          ...state,\n          isLoading: false,\n          isError: true\n        };\n      }\n    case types.GET_USER_LOADING:\n      {\n        return {\n          ...state,\n          isLoading: true,\n          isError: false\n        };\n      }\n    case types.GET_USER_SUCCESS:\n      {\n        let data = payload.map(doc => ({\n          ...doc.data(),\n          id: doc.id\n        }));\n        return {\n          ...state,\n          isLoading: false,\n          isError: false,\n          userlist: data\n        };\n      }\n    case types.GET_USER_ERROR:\n      {\n        return {\n          ...state,\n          isLoading: false,\n          isError: true\n        };\n      }\n    case types.REMOVE_USER_LOADING:\n      {\n        return {\n          ...state,\n          isLoading: true,\n          isError: false\n        };\n      }\n    case types.REMOVE_USER_SUCCESS:\n      {\n        let deld = state.userlist.filter(user => user.id != payload);\n        return {\n          ...state,\n          isLoading: false,\n          isError: false,\n          userlist: deld\n        };\n      }\n    case types.REMOVE_USER_ERROR:\n      {\n        return {\n          ...state,\n          isLoading: false,\n          isError: true\n        };\n      }\n    case types.ADD_Admin_LOADING:\n      {\n        return {\n          ...state,\n          isLoading: true,\n          isError: false\n        };\n      }\n    case types.ADD_Admin_SUCCESS:\n      {\n        return {\n          ...state,\n          isLoading: false,\n          isError: false\n        };\n      }\n    case types.ADD_Admin_ERROR:\n      {\n        return {\n          ...state,\n          isLoading: false,\n          isError: true\n        };\n      }\n    case types.Get_Admin_LOADING:\n      {\n        return {\n          ...state,\n          isLoading: true,\n          isError: false\n        };\n      }\n    case types.Get_Admin_SUCCESS:\n      {\n        let data = payload.map(doc => ({\n          ...doc.data(),\n          id: doc.id\n        }));\n        return {\n          ...state,\n          isLoading: false,\n          isError: false,\n          adminlist: data\n        };\n      }\n    case types.Get_Admin_ERROR:\n      {\n        return {\n          ...state,\n          isLoading: false,\n          isError: true\n        };\n      }\n    default:\n      return state;\n  }\n};\n_c = Authreducer;\nvar _c;\n$RefreshReg$(_c, \"Authreducer\");","map":{"version":3,"names":["getItem","setItem","types","initialState","isLoading","isError","userData","isAuth","userlist","adminlist","Authreducer","state","type","payload","ADD_USER_LOADING","ADD_USER_SUCCESS","ADD_USER_ERROR","LOGIN_USER_LOADING","LOGIN_USER_SUCCESS","LOGIN_USER_ERROR","LOGOut_USER_LOADING","LOGOut_USER_SUCCESS","LOGOut_USER_ERROR","GET_USER_LOADING","GET_USER_SUCCESS","data","map","doc","id","GET_USER_ERROR","REMOVE_USER_LOADING","REMOVE_USER_SUCCESS","deld","filter","user","REMOVE_USER_ERROR","ADD_Admin_LOADING","ADD_Admin_SUCCESS","ADD_Admin_ERROR","Get_Admin_LOADING","Get_Admin_SUCCESS","Get_Admin_ERROR","_c","$RefreshReg$"],"sources":["C:/Users/AbhijeetBhosale/Desktop/IndiaMart clone 2/TradeMart/src/redux/Authentication/auth.reducer.js"],"sourcesContent":["import { getItem, setItem } from \"../../utility/localStorage\";\r\nimport * as types from \"./auth.actionTypes\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  isError: false,\r\n  userData: getItem(\"userData\") || {},\r\n  isAuth: false,\r\n  userlist: [],\r\n  adminlist: [],\r\n};\r\n\r\nexport const Authreducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case types.ADD_USER_LOADING: {\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        isError: false,\r\n      };\r\n    }\r\n    case types.ADD_USER_SUCCESS: {\r\n      setItem(\"userData\", payload);\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: false,\r\n        isAuth: true,\r\n      };\r\n    }\r\n\r\n    case types.ADD_USER_ERROR: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: true,\r\n      };\r\n    }\r\n\r\n    case types.LOGIN_USER_LOADING: {\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        isError: false,\r\n      };\r\n    }\r\n    case types.LOGIN_USER_SUCCESS: {\r\n      setItem(\"userData\", payload);\r\n     \r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: false,\r\n        isAuth: true,\r\n      };\r\n    }\r\n\r\n    case types.LOGIN_USER_ERROR: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: true,\r\n      };\r\n    }\r\n\r\n    case types.LOGOut_USER_LOADING: {\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        isError: false,\r\n      };\r\n    }\r\n\r\n    case types.LOGOut_USER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: false,\r\n      };\r\n    }\r\n    case types.LOGOut_USER_ERROR: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: true,\r\n      };\r\n    }\r\n    case types.GET_USER_LOADING: {\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        isError: false,\r\n      };\r\n    }\r\n\r\n    case types.GET_USER_SUCCESS: {\r\n      let data = payload.map((doc) => ({ ...doc.data(), id: doc.id }));\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: false,\r\n        userlist: data,\r\n      };\r\n    }\r\n    case types.GET_USER_ERROR: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: true,\r\n      };\r\n    }\r\n\r\n    case types.REMOVE_USER_LOADING: {\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        isError: false,\r\n      };\r\n    }\r\n    case types.REMOVE_USER_SUCCESS: {\r\n      let deld = state.userlist.filter((user) => user.id != payload);\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: false,\r\n        userlist: deld,\r\n      };\r\n    }\r\n    case types.REMOVE_USER_ERROR: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: true,\r\n      };\r\n    }\r\n\r\n    case types.ADD_Admin_LOADING: {\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        isError: false,\r\n      };\r\n    }\r\n    case types.ADD_Admin_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: false,\r\n      };\r\n    }\r\n\r\n    case types.ADD_Admin_ERROR: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: true,\r\n      };\r\n    }\r\n    case types.Get_Admin_LOADING: {\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        isError: false,\r\n      };\r\n    }\r\n\r\n    case types.Get_Admin_SUCCESS: {\r\n      let data = payload.map((doc) => ({ ...doc.data(), id: doc.id }));\r\n      \r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: false,\r\n        adminlist: data,\r\n      };\r\n    }\r\n    case types.Get_Admin_ERROR: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: true,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}