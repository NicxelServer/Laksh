{"ast":null,"code":"import axios from \"axios\";\nimport * as types from \"./solarpanel.actionTypes\";\nexport const Get_solarpanel_item = (order, company) => async dispatch => {\n  dispatch({\n    type: types.GET_solarpanel_LOADING\n  });\n  try {\n    let respnce = await axios.get(`https://frail-gold-hen.cyclic.app/solarpanel?page=1&limit=60&company=${company.toString()}&sort=rating,${order}`);\n    setTimeout(function () {\n      return dispatch({\n        type: types.GET_solarpanel_SUCCESS,\n        payload: respnce.data\n      });\n    }, 3000);\n  } catch (error) {\n    dispatch({\n      type: types.GET_solarpanel_ERROR\n    });\n  }\n};\nexport const ADD_solarpanel_item = cred => async dispatch => {\n  dispatch({\n    type: types.ADD_solarpanel_LOADING\n  });\n  try {\n    let res = await axios.post(\"https://frail-gold-hen.cyclic.app/solarpanel/add\", cred);\n    dispatch({\n      type: types.ADD_solarpanelT_SUCCESS,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: types.ADD_solarpanel_ERROR\n    });\n  }\n};\nexport const UPDATE_solarpanel_item = (id, chenge) => async dispatch => {\n  dispatch({\n    type: types.UPDATE_solarpanel_LOADING\n  });\n  try {\n    let res = await axios.patch(`https://frail-gold-hen.cyclic.app/solarpanel/update/${id}`, chenge);\n    dispatch({\n      type: types.UPDATE_solarpanel_SUCCESS,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: types.UPDATE_solarpanel_ERROR\n    });\n  }\n};\nexport const REMOVE_solarpanel_item = id => async dispatch => {\n  dispatch({\n    type: types.REMOVE_solarpanel_LOADING\n  });\n  try {\n    let res = await axios.delete(`https://frail-gold-hen.cyclic.app/solarpanel/delete/${id}`);\n    dispatch({\n      type: types.REMOVE_solarpanel_SUCCESS,\n      payload: id\n    });\n  } catch (error) {\n    dispatch({\n      type: types.REMOVE_solarpanel_ERROR\n    });\n  }\n};\nexport const sortMysolarpanel = how => dispatch => {\n  dispatch({\n    type: types.SORT_solarpanel,\n    payload: how\n  });\n};","map":{"version":3,"names":["axios","types","Get_solarpanel_item","order","company","dispatch","type","GET_solarpanel_LOADING","respnce","get","toString","setTimeout","GET_solarpanel_SUCCESS","payload","data","error","GET_solarpanel_ERROR","ADD_solarpanel_item","cred","ADD_solarpanel_LOADING","res","post","ADD_solarpanelT_SUCCESS","ADD_solarpanel_ERROR","UPDATE_solarpanel_item","id","chenge","UPDATE_solarpanel_LOADING","patch","UPDATE_solarpanel_SUCCESS","UPDATE_solarpanel_ERROR","REMOVE_solarpanel_item","REMOVE_solarpanel_LOADING","delete","REMOVE_solarpanel_SUCCESS","REMOVE_solarpanel_ERROR","sortMysolarpanel","how","SORT_solarpanel"],"sources":["D:/ABHI NIXCEL/Laksh Master/Laksh/src/redux/solarpanel/solarpanel.action.js"],"sourcesContent":["import axios from \"axios\";\r\nimport * as types from \"./solarpanel.actionTypes\";\r\n\r\nexport const Get_solarpanel_item = (order,company) => async (dispatch) => {\r\n  dispatch({ type: types.GET_solarpanel_LOADING });\r\n  try {\r\n    let respnce = await axios.get(\r\n      `https://frail-gold-hen.cyclic.app/solarpanel?page=1&limit=60&company=${company.toString()}&sort=rating,${order}`\r\n    \r\n    );\r\n    setTimeout(function(){\r\n      return dispatch({ type: types.GET_solarpanel_SUCCESS, payload: respnce.data });\r\n    },3000)\r\n    \r\n  } catch (error) {\r\n    dispatch({ type: types.GET_solarpanel_ERROR });\r\n  }\r\n};\r\n\r\nexport const ADD_solarpanel_item = (cred) => async (dispatch) => {\r\n  dispatch({ type: types.ADD_solarpanel_LOADING });\r\n  try {\r\n    let res = await axios.post(\r\n      \"https://frail-gold-hen.cyclic.app/solarpanel/add\",\r\n      cred\r\n    );\r\n  \r\n    dispatch({ type: types.ADD_solarpanelT_SUCCESS, payload: res.data });\r\n  } catch (error) {\r\n    dispatch({ type: types.ADD_solarpanel_ERROR });\r\n  }\r\n};\r\n\r\nexport const UPDATE_solarpanel_item = (id, chenge) => async (dispatch) => {\r\n  dispatch({ type: types.UPDATE_solarpanel_LOADING });\r\n  try {\r\n    let res = await axios.patch(\r\n      `https://frail-gold-hen.cyclic.app/solarpanel/update/${id}`,\r\n      chenge\r\n    );\r\n   \r\n    dispatch({ type: types.UPDATE_solarpanel_SUCCESS, payload: res.data });\r\n  } catch (error) {\r\n    dispatch({ type: types.UPDATE_solarpanel_ERROR });\r\n  }\r\n};\r\n\r\nexport const REMOVE_solarpanel_item = (id) => async (dispatch) => {\r\n\r\n  dispatch({ type: types.REMOVE_solarpanel_LOADING });\r\n  try {\r\n    let res = await axios.delete(\r\n      `https://frail-gold-hen.cyclic.app/solarpanel/delete/${id}`\r\n    );\r\n   \r\n    dispatch({ type: types.REMOVE_solarpanel_SUCCESS, payload: id });\r\n  } catch (error) {\r\n    dispatch({ type: types.REMOVE_solarpanel_ERROR });\r\n  }\r\n};\r\nexport const sortMysolarpanel = (how) => (dispatch) => {\r\n  dispatch({ type: types.SORT_solarpanel, payload: how });\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,KAAK,MAAM,0BAA0B;AAEjD,OAAO,MAAMC,mBAAmB,GAAGA,CAACC,KAAK,EAACC,OAAO,KAAK,MAAOC,QAAQ,IAAK;EACxEA,QAAQ,CAAC;IAAEC,IAAI,EAAEL,KAAK,CAACM;EAAuB,CAAC,CAAC;EAChD,IAAI;IACF,IAAIC,OAAO,GAAG,MAAMR,KAAK,CAACS,GAAG,CAC1B,wEAAuEL,OAAO,CAACM,QAAQ,CAAC,CAAE,gBAAeP,KAAM,EAElH,CAAC;IACDQ,UAAU,CAAC,YAAU;MACnB,OAAON,QAAQ,CAAC;QAAEC,IAAI,EAAEL,KAAK,CAACW,sBAAsB;QAAEC,OAAO,EAAEL,OAAO,CAACM;MAAK,CAAC,CAAC;IAChF,CAAC,EAAC,IAAI,CAAC;EAET,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdV,QAAQ,CAAC;MAAEC,IAAI,EAAEL,KAAK,CAACe;IAAqB,CAAC,CAAC;EAChD;AACF,CAAC;AAED,OAAO,MAAMC,mBAAmB,GAAIC,IAAI,IAAK,MAAOb,QAAQ,IAAK;EAC/DA,QAAQ,CAAC;IAAEC,IAAI,EAAEL,KAAK,CAACkB;EAAuB,CAAC,CAAC;EAChD,IAAI;IACF,IAAIC,GAAG,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CACxB,kDAAkD,EAClDH,IACF,CAAC;IAEDb,QAAQ,CAAC;MAAEC,IAAI,EAAEL,KAAK,CAACqB,uBAAuB;MAAET,OAAO,EAAEO,GAAG,CAACN;IAAK,CAAC,CAAC;EACtE,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdV,QAAQ,CAAC;MAAEC,IAAI,EAAEL,KAAK,CAACsB;IAAqB,CAAC,CAAC;EAChD;AACF,CAAC;AAED,OAAO,MAAMC,sBAAsB,GAAGA,CAACC,EAAE,EAAEC,MAAM,KAAK,MAAOrB,QAAQ,IAAK;EACxEA,QAAQ,CAAC;IAAEC,IAAI,EAAEL,KAAK,CAAC0B;EAA0B,CAAC,CAAC;EACnD,IAAI;IACF,IAAIP,GAAG,GAAG,MAAMpB,KAAK,CAAC4B,KAAK,CACxB,uDAAsDH,EAAG,EAAC,EAC3DC,MACF,CAAC;IAEDrB,QAAQ,CAAC;MAAEC,IAAI,EAAEL,KAAK,CAAC4B,yBAAyB;MAAEhB,OAAO,EAAEO,GAAG,CAACN;IAAK,CAAC,CAAC;EACxE,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdV,QAAQ,CAAC;MAAEC,IAAI,EAAEL,KAAK,CAAC6B;IAAwB,CAAC,CAAC;EACnD;AACF,CAAC;AAED,OAAO,MAAMC,sBAAsB,GAAIN,EAAE,IAAK,MAAOpB,QAAQ,IAAK;EAEhEA,QAAQ,CAAC;IAAEC,IAAI,EAAEL,KAAK,CAAC+B;EAA0B,CAAC,CAAC;EACnD,IAAI;IACF,IAAIZ,GAAG,GAAG,MAAMpB,KAAK,CAACiC,MAAM,CACzB,uDAAsDR,EAAG,EAC5D,CAAC;IAEDpB,QAAQ,CAAC;MAAEC,IAAI,EAAEL,KAAK,CAACiC,yBAAyB;MAAErB,OAAO,EAAEY;IAAG,CAAC,CAAC;EAClE,CAAC,CAAC,OAAOV,KAAK,EAAE;IACdV,QAAQ,CAAC;MAAEC,IAAI,EAAEL,KAAK,CAACkC;IAAwB,CAAC,CAAC;EACnD;AACF,CAAC;AACD,OAAO,MAAMC,gBAAgB,GAAIC,GAAG,IAAMhC,QAAQ,IAAK;EACrDA,QAAQ,CAAC;IAAEC,IAAI,EAAEL,KAAK,CAACqC,eAAe;IAAEzB,OAAO,EAAEwB;EAAI,CAAC,CAAC;AACzD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}