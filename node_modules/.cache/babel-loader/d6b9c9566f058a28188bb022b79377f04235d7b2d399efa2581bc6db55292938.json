{"ast":null,"code":"import axios from \"axios\";\nimport * as types from \"./medicines.actionTypes\";\nexport const Get_medicines_item = (order, company) => async dispatch => {\n  dispatch({\n    type: types.GET_medicines_LOADING\n  });\n  try {\n    let respnce = await axios.get(`https://frail-gold-hen.cyclic.app/medicin?page=1&limit=45&company=${company.toString()}&sort=rating,${order}`);\n    setTimeout(function () {\n      return dispatch({\n        type: types.GET_medicines_SUCCESS,\n        payload: respnce.data\n      });\n    }, 3000);\n  } catch (error) {\n    dispatch({\n      type: types.GET_medicines_ERROR\n    });\n  }\n};\nexport const ADD_medicines_item = cred => async dispatch => {\n  dispatch({\n    type: types.ADD_medicines_LOADING\n  });\n  try {\n    let res = await axios.post(\"https://frail-gold-hen.cyclic.app/medicin/add\", cred);\n    dispatch({\n      type: types.ADD_medicinesT_SUCCESS,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: types.ADD_medicines_ERROR\n    });\n  }\n};\nexport const UPDATE_medicines_item = (id, change) => async dispatch => {\n  dispatch({\n    type: types.UPDATE_medicines_LOADING\n  });\n  try {\n    let res = await axios.patch(`https://frail-gold-hen.cyclic.app/medicin/update/${id}`, change);\n    dispatch({\n      type: types.UPDATE_medicines_SUCCESS,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: types.UPDATE_medicines_ERROR\n    });\n  }\n};\nexport const REMOVE_medicines_item = id => async dispatch => {\n  dispatch({\n    type: types.REMOVE_medicines_LOADING\n  });\n  try {\n    let res = await axios.delete(`https://frail-gold-hen.cyclic.app/medicin/delete/${id}`);\n    dispatch({\n      type: types.REMOVE_medicines_SUCCESS,\n      payload: id\n    });\n  } catch (error) {\n    dispatch({\n      type: types.REMOVE_medicines_ERROR\n    });\n  }\n};\nexport const sortMymedicines = how => dispatch => {\n  dispatch({\n    type: types.SORT_medicinesES,\n    payload: how\n  });\n};","map":{"version":3,"names":["axios","types","Get_medicines_item","order","company","dispatch","type","GET_medicines_LOADING","respnce","get","toString","setTimeout","GET_medicines_SUCCESS","payload","data","error","GET_medicines_ERROR","ADD_medicines_item","cred","ADD_medicines_LOADING","res","post","ADD_medicinesT_SUCCESS","ADD_medicines_ERROR","UPDATE_medicines_item","id","change","UPDATE_medicines_LOADING","patch","UPDATE_medicines_SUCCESS","UPDATE_medicines_ERROR","REMOVE_medicines_item","REMOVE_medicines_LOADING","delete","REMOVE_medicines_SUCCESS","REMOVE_medicines_ERROR","sortMymedicines","how","SORT_medicinesES"],"sources":["C:/Users/AbhijeetBhosale/Desktop/Lakshya_Test/nixmart/src/redux/medicines/medicines.action.js"],"sourcesContent":["import axios from \"axios\";\r\nimport * as types from \"./medicines.actionTypes\";\r\n\r\nexport const Get_medicines_item = (order,company) => async (dispatch) => {\r\n  dispatch({ type: types.GET_medicines_LOADING });\r\n  try {\r\n    let respnce = await axios.get(\r\n      `https://frail-gold-hen.cyclic.app/medicin?page=1&limit=45&company=${company.toString()}&sort=rating,${order}`\r\n    );\r\n    setTimeout(function(){\r\n         return dispatch({ type: types.GET_medicines_SUCCESS, payload: respnce.data });\r\n    },3000)\r\n    \r\n  } catch (error) {\r\n    dispatch({ type: types.GET_medicines_ERROR });\r\n  }\r\n};\r\n\r\nexport const ADD_medicines_item = (cred) => async (dispatch) => {\r\n  dispatch({ type: types.ADD_medicines_LOADING });\r\n  try {\r\n    let res = await axios.post(\r\n      \"https://frail-gold-hen.cyclic.app/medicin/add\",\r\n      cred\r\n    );\r\n    \r\n    dispatch({ type: types.ADD_medicinesT_SUCCESS, payload: res.data });\r\n  } catch (error) {\r\n    dispatch({ type: types.ADD_medicines_ERROR });\r\n  }\r\n};\r\n\r\nexport const UPDATE_medicines_item = (id, change) => async (dispatch) => {\r\n  dispatch({ type: types.UPDATE_medicines_LOADING });\r\n  try {\r\n    let res = await axios.patch(\r\n      `https://frail-gold-hen.cyclic.app/medicin/update/${id}`,\r\n      change\r\n    );\r\n\r\n    dispatch({ type: types.UPDATE_medicines_SUCCESS, payload: res.data });\r\n  } catch (error) {\r\n    dispatch({ type: types.UPDATE_medicines_ERROR });\r\n  }\r\n};\r\n\r\nexport const REMOVE_medicines_item = (id) => async (dispatch) => {\r\n \r\n  dispatch({ type: types.REMOVE_medicines_LOADING });\r\n  try {\r\n    let res = await axios.delete(\r\n      `https://frail-gold-hen.cyclic.app/medicin/delete/${id}`\r\n    );\r\n  \r\n    dispatch({ type: types.REMOVE_medicines_SUCCESS, payload: id });\r\n  } catch (error) {\r\n    dispatch({ type: types.REMOVE_medicines_ERROR });\r\n  }\r\n};\r\nexport const sortMymedicines = (how) => (dispatch) => {\r\n  dispatch({ type: types.SORT_medicinesES, payload: how });\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,KAAK,MAAM,yBAAyB;AAEhD,OAAO,MAAMC,kBAAkB,GAAGA,CAACC,KAAK,EAACC,OAAO,KAAK,MAAOC,QAAQ,IAAK;EACvEA,QAAQ,CAAC;IAAEC,IAAI,EAAEL,KAAK,CAACM;EAAsB,CAAC,CAAC;EAC/C,IAAI;IACF,IAAIC,OAAO,GAAG,MAAMR,KAAK,CAACS,GAAG,CAC1B,qEAAoEL,OAAO,CAACM,QAAQ,CAAC,CAAE,gBAAeP,KAAM,EAC/G,CAAC;IACDQ,UAAU,CAAC,YAAU;MAChB,OAAON,QAAQ,CAAC;QAAEC,IAAI,EAAEL,KAAK,CAACW,qBAAqB;QAAEC,OAAO,EAAEL,OAAO,CAACM;MAAK,CAAC,CAAC;IAClF,CAAC,EAAC,IAAI,CAAC;EAET,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdV,QAAQ,CAAC;MAAEC,IAAI,EAAEL,KAAK,CAACe;IAAoB,CAAC,CAAC;EAC/C;AACF,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAIC,IAAI,IAAK,MAAOb,QAAQ,IAAK;EAC9DA,QAAQ,CAAC;IAAEC,IAAI,EAAEL,KAAK,CAACkB;EAAsB,CAAC,CAAC;EAC/C,IAAI;IACF,IAAIC,GAAG,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CACxB,+CAA+C,EAC/CH,IACF,CAAC;IAEDb,QAAQ,CAAC;MAAEC,IAAI,EAAEL,KAAK,CAACqB,sBAAsB;MAAET,OAAO,EAAEO,GAAG,CAACN;IAAK,CAAC,CAAC;EACrE,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdV,QAAQ,CAAC;MAAEC,IAAI,EAAEL,KAAK,CAACsB;IAAoB,CAAC,CAAC;EAC/C;AACF,CAAC;AAED,OAAO,MAAMC,qBAAqB,GAAGA,CAACC,EAAE,EAAEC,MAAM,KAAK,MAAOrB,QAAQ,IAAK;EACvEA,QAAQ,CAAC;IAAEC,IAAI,EAAEL,KAAK,CAAC0B;EAAyB,CAAC,CAAC;EAClD,IAAI;IACF,IAAIP,GAAG,GAAG,MAAMpB,KAAK,CAAC4B,KAAK,CACxB,oDAAmDH,EAAG,EAAC,EACxDC,MACF,CAAC;IAEDrB,QAAQ,CAAC;MAAEC,IAAI,EAAEL,KAAK,CAAC4B,wBAAwB;MAAEhB,OAAO,EAAEO,GAAG,CAACN;IAAK,CAAC,CAAC;EACvE,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdV,QAAQ,CAAC;MAAEC,IAAI,EAAEL,KAAK,CAAC6B;IAAuB,CAAC,CAAC;EAClD;AACF,CAAC;AAED,OAAO,MAAMC,qBAAqB,GAAIN,EAAE,IAAK,MAAOpB,QAAQ,IAAK;EAE/DA,QAAQ,CAAC;IAAEC,IAAI,EAAEL,KAAK,CAAC+B;EAAyB,CAAC,CAAC;EAClD,IAAI;IACF,IAAIZ,GAAG,GAAG,MAAMpB,KAAK,CAACiC,MAAM,CACzB,oDAAmDR,EAAG,EACzD,CAAC;IAEDpB,QAAQ,CAAC;MAAEC,IAAI,EAAEL,KAAK,CAACiC,wBAAwB;MAAErB,OAAO,EAAEY;IAAG,CAAC,CAAC;EACjE,CAAC,CAAC,OAAOV,KAAK,EAAE;IACdV,QAAQ,CAAC;MAAEC,IAAI,EAAEL,KAAK,CAACkC;IAAuB,CAAC,CAAC;EAClD;AACF,CAAC;AACD,OAAO,MAAMC,eAAe,GAAIC,GAAG,IAAMhC,QAAQ,IAAK;EACpDA,QAAQ,CAAC;IAAEC,IAAI,EAAEL,KAAK,CAACqC,gBAAgB;IAAEzB,OAAO,EAAEwB;EAAI,CAAC,CAAC;AAC1D,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}